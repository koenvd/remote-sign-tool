//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RemoteSignTool.Server.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RemoteSignTool.Server.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Archive {0} hasn&apos;t been found.
        /// </summary>
        public static string ArchiveHasNotBeenFoundFormat {
            get {
                return ResourceManager.GetString("ArchiveHasNotBeenFoundFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Archive {0} with signed files has been created.
        /// </summary>
        public static string ArchiveWithSignedFilesCreated {
            get {
                return ResourceManager.GetString("ArchiveWithSignedFilesCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory: {0} created.
        /// </summary>
        public static string DirectoryCreatedFormat {
            get {
                return ResourceManager.GetString("DirectoryCreatedFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executing: \&quot;{0}\&quot; {1} on {2}.
        /// </summary>
        public static string ExecutingOnFormat {
            get {
                return ResourceManager.GetString("ExecutingOnFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files have been extracted to: {0}.
        /// </summary>
        public static string FilesHaveBeenExtractedFormat {
            get {
                return ResourceManager.GetString("FilesHaveBeenExtractedFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid URL.
        /// </summary>
        public static string InvalidUrl {
            get {
                return ResourceManager.GetString("InvalidUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server Address.
        /// </summary>
        public static string Label_ServerAddress {
            get {
                return ResourceManager.GetString("Label_ServerAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server is not running.
        /// </summary>
        public static string Label_ServerIsNotRunning {
            get {
                return ResourceManager.GetString("Label_ServerIsNotRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server is running.
        /// </summary>
        public static string Label_ServerIsRunning {
            get {
                return ResourceManager.GetString("Label_ServerIsRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start Server.
        /// </summary>
        public static string Label_StartServer {
            get {
                return ResourceManager.GetString("Label_StartServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop Server.
        /// </summary>
        public static string Label_StopServer {
            get {
                return ResourceManager.GetString("Label_StopServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No files have been found in request body.
        /// </summary>
        public static string NoFileSentErrorMessage {
            get {
                return ResourceManager.GetString("NoFileSentErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server has been started.
        /// </summary>
        public static string ServerHasBeenStarted {
            get {
                return ResourceManager.GetString("ServerHasBeenStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server has been stopped.
        /// </summary>
        public static string ServerHasBeenStopped {
            get {
                return ResourceManager.GetString("ServerHasBeenStopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server could not sign files when starting up.
        /// </summary>
        public static string SigningAtStartupFailed {
            get {
                return ResourceManager.GetString("SigningAtStartupFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to signtool.exe exited with code: {0}.
        /// </summary>
        public static string SignToolExitedWithCodeFormat {
            get {
                return ResourceManager.GetString("SignToolExitedWithCodeFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to signtool.exe is not installed on the system. You should install Windows 10 SDK..
        /// </summary>
        public static string SignToolNotInstalled {
            get {
                return ResourceManager.GetString("SignToolNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to signtool.exe successfully signed files.
        /// </summary>
        public static string SignToolSuccessfullySignedFiles {
            get {
                return ResourceManager.GetString("SignToolSuccessfullySignedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start signing received files.
        /// </summary>
        public static string StartSigningFiles {
            get {
                return ResourceManager.GetString("StartSigningFiles", resourceCulture);
            }
        }
    }
}
